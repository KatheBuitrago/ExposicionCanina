
  import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.*;

public class DogShowGUI extends Application {
    static final int MAXIMO_PERROS = 500;

    static class Perro {
        String nombre;
        String raza;
        int edad;
        int puntos;
    }

    private Perro[] perros = new Perro[MAXIMO_PERROS];
    private int cantidad_Perros = 0;

    private TextArea resultArea;

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Exposición Canina");

       
        resultArea = new TextArea();
        resultArea.setEditable(false);
        Button refreshButton = new Button("Actualizar Lista");
        Button registerButton = new Button("Registrar Nuevo Perro");
        refreshButton.setOnAction(e -> refreshList());
        registerButton.setOnAction(e -> showRegistrationDialog());


        VBox layout = new VBox(10);
        layout.setPadding(new Insets(10, 10, 10, 10));
        layout.getChildren().addAll(resultArea, refreshButton, registerButton);

        Scene scene = new Scene(layout, 400, 400);
        primaryStage.setScene(scene);

        primaryStage.show();
    }

    private void refreshList() {
        resultArea.clear();
        for (int i = 0; i < cantidad_Perros; i++) {
            resultArea.appendText("Nombre: " + perros[i].nombre +
                    ", Raza: " + perros[i].raza +
                    ", Edad: " + perros[i].edad +
                    " años, Puntos: " + perros[i].puntos + " puntos\n");
        }
    }

    private void showRegistrationDialog() {
        Dialog<Perro> dialog = new Dialog<>();
        dialog.setTitle("Registrar Nuevo Perro");
        dialog.setHeaderText("Ingrese los detalles del nuevo perro");

        GridPane grid = new GridPane();
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(20, 150, 10, 10));

        TextField nombreField = new TextField();
        TextField razaField = new TextField();
        TextField edadField = new TextField();
        TextField puntosField = new TextField();

        grid.add(new Label("Nombre:"), 0, 0);
        grid.add(nombreField, 1, 0);
        grid.add(new Label("Raza:"), 0, 1);
        grid.add(razaField, 1, 1);
        grid.add(new Label("Edad:"), 0, 2);
        grid.add(edadField, 1, 2);
        grid.add(new Label("Puntos:"), 0, 3);
        grid.add(puntosField, 1, 3);

        dialog.getDialogPane().setContent(grid);

        ButtonType registerButtonType = new ButtonType("Registrar", ButtonBar.ButtonData.OK_DONE);
        dialog.getDialogPane().getButtonTypes().addAll(registerButtonType, ButtonType.CANCEL);

        Node registerButton = dialog.getDialogPane().lookupButton(registerButtonType);
        registerButton.setDisable(true);

        
        nombreField.textProperty().addListener((observable, oldValue, newValue) ->
                registerButton.setDisable(newValue.trim().isEmpty() || razaField.getText().trim().isEmpty()
                        || edadField.getText().trim().isEmpty() || puntosField.getText().trim().isEmpty()));

               dialog.setResultConverter(dialogButton -> {
            if (dialogButton == registerButtonType) {
                Perro nuevoPerro = new Perro();
                nuevoPerro.nombre = nombreField.getText();
                nuevoPerro.raza = razaField.getText();
                nuevoPerro.edad = Integer.parseInt(edadField.getText());
                nuevoPerro.puntos = Integer.parseInt(puntosField.getText());
                return nuevoPerro;
            }
            return null;
        });

        dialog.showAndWait().ifPresent(perro -> {
            if (cantidad_Perros < MAXIMO_PERROS) {
                perros[cantidad_Perros++] = perro;
                refreshList();
            } else {
                Alert alert = new Alert(Alert.AlertType.WARNING);
                alert.setTitle("Advertencia");
                alert.setHeaderText(null);
                alert.setContentText("Se ha alcanzado el número máximo de perros registrados.");
                alert.showAndWait();
            }
        });
    }
}